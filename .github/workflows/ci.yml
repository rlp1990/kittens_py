name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-angular:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Upgrade npm
        run: npm install -g npm@latest

      - name: Clean npm Cache
        run: npm cache clean --force

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install --loglevel verbose

      - name: Run Tests
        run: npm test -- --watch=false --browsers=ChromeHeadless

      - name: Build Angular App
        run: npm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: angular-build
          path: dist/

  build-fastapi:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Check for Test Files
        id: test_files
        run: |
          if ls app/tests/*.py 1> /dev/null 2>&1; then
            echo "TEST_FILES_FOUND=true" >> $GITHUB_ENV
          else
            echo "TEST_FILES_FOUND=false" >> $GITHUB_ENV
          fi

      - name: Run Tests
        if: env.TEST_FILES_FOUND == 'true'
        env:
          MONGO_URI: mongodb://localhost:27017/testdb
        run: pytest app/tests

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/fastapi-server:latest -f Dockerfile .

      - name: Check GHCR Token
        id: check_token
        run: |
          if [ -z "${{ secrets.GHCR_TOKEN }}" ]; then
            echo "GHCR_TOKEN is not set"
            echo "skip_docker_upload=true" >> $GITHUB_ENV
          else
            echo "GHCR_TOKEN is set"
            echo "skip_docker_upload=false" >> $GITHUB_ENV
          fi

      - name: Login to GitHub Container Registry
        if: env.skip_docker_upload == 'false'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Push Docker Image
        if: env.skip_docker_upload == 'false'
        run: |
          docker push ghcr.io/${{ github.repository }}/fastapi-server:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-angular, build-fastapi]

    steps:
      - name: Deploy Angular App
        run: echo "Deploying Angular app..."

      - name: Deploy FastAPI Server
        run: echo "Deploying FastAPI server..."
